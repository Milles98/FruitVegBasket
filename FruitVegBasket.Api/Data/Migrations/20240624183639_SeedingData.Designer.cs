// <auto-generated />
using System;
using FruitVegBasket.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FruitVegBasket.Api.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240624183639_SeedingData")]
    partial class SeedingData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.5.24306.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FruitVegBasket.Api.Data.Entities.Address", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Address2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("FruitVegBasket.Api.Data.Entities.Category", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<short>("ParentId")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = (short)1,
                            Image = "fruits.jpg",
                            Name = "Fruits",
                            ParentId = (short)0
                        },
                        new
                        {
                            Id = (short)2,
                            Image = "seasonal_fruits.jpg",
                            Name = "Seasonal Fruits",
                            ParentId = (short)1
                        },
                        new
                        {
                            Id = (short)3,
                            Image = "exotic_fruits.jpg",
                            Name = "Exotic Fruits",
                            ParentId = (short)1
                        },
                        new
                        {
                            Id = (short)4,
                            Image = "vegetables.jpg",
                            Name = "Vegetables",
                            ParentId = (short)0
                        },
                        new
                        {
                            Id = (short)5,
                            Image = "green_vegetables.jpg",
                            Name = "Green Vegetables",
                            ParentId = (short)4
                        },
                        new
                        {
                            Id = (short)6,
                            Image = "leafy_vegetables.jpg",
                            Name = "Leafy Vegetables",
                            ParentId = (short)4
                        },
                        new
                        {
                            Id = (short)7,
                            Image = "salads.jpg",
                            Name = "Salads",
                            ParentId = (short)4
                        },
                        new
                        {
                            Id = (short)8,
                            Image = "dairy.jpg",
                            Name = "Dairy",
                            ParentId = (short)0
                        },
                        new
                        {
                            Id = (short)9,
                            Image = "milk_curd_yoghurt.jpg",
                            Name = "Milk, Curd & Yoghurts",
                            ParentId = (short)1
                        },
                        new
                        {
                            Id = (short)10,
                            Image = "butter_cheese.jpg",
                            Name = "Butter & Cheese",
                            ParentId = (short)1
                        },
                        new
                        {
                            Id = (short)11,
                            Image = "eggs_meat.jpg",
                            Name = "Eggs & Meat",
                            ParentId = (short)0
                        },
                        new
                        {
                            Id = (short)12,
                            Image = "eggs.jpg",
                            Name = "Eggs",
                            ParentId = (short)1
                        },
                        new
                        {
                            Id = (short)13,
                            Image = "meat.jpg",
                            Name = "Meat",
                            ParentId = (short)1
                        },
                        new
                        {
                            Id = (short)14,
                            Image = "seafood.jpg",
                            Name = "Seafood",
                            ParentId = (short)1
                        });
                });

            modelBuilder.Entity("FruitVegBasket.Api.Data.Entities.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BgColor")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Offer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BgColor = "FRT30",
                            Code = "#ffff00",
                            Description = "Enjoy up to 30% off on all fruits",
                            IsActive = false,
                            Title = "Up to 30% off"
                        },
                        new
                        {
                            Id = 2,
                            BgColor = "VEG50",
                            Code = "#d0f200",
                            Description = "Enjoy our big offer of 50% off all green vegetables",
                            IsActive = false,
                            Title = "Green Veg Big Sale 50% OFF"
                        },
                        new
                        {
                            Id = 3,
                            BgColor = "EXT100",
                            Code = "#d0f200",
                            Description = "Flat Rs. 100 off on all exotic fruits and vegetables",
                            IsActive = false,
                            Title = "Flat 100 OFF"
                        },
                        new
                        {
                            Id = 4,
                            BgColor = "FRT25",
                            Code = "#e28083",
                            Description = "Enjoy 25% off on all seasonal fruits",
                            IsActive = false,
                            Title = "25% OFF on Seasonal Fruits"
                        });
                });

            modelBuilder.Entity("FruitVegBasket.Api.Data.Entities.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("FruitVegBasket.Api.Data.Entities.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("FruitVegBasket.Api.Data.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<short>("CategoryId")
                        .HasColumnType("smallint");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("FruitVegBasket.Api.Data.Entities.Role", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = (short)1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = (short)2,
                            Name = "Customer"
                        });
                });

            modelBuilder.Entity("FruitVegBasket.Api.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Will remove password not good but using for simplicity");

                    b.Property<short>("RoleId")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "mille.elfver98@gmail.com",
                            Mobile = "1234567890",
                            Name = "Mille Elfver",
                            Password = "123456",
                            RoleId = (short)1
                        });
                });

            modelBuilder.Entity("FruitVegBasket.Api.Data.Entities.Address", b =>
                {
                    b.HasOne("FruitVegBasket.Api.Data.Entities.User", "User")
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FruitVegBasket.Api.Data.Entities.Order", b =>
                {
                    b.HasOne("FruitVegBasket.Api.Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FruitVegBasket.Api.Data.Entities.OrderItem", b =>
                {
                    b.HasOne("FruitVegBasket.Api.Data.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FruitVegBasket.Api.Data.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FruitVegBasket.Api.Data.Entities.Product", b =>
                {
                    b.HasOne("FruitVegBasket.Api.Data.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("FruitVegBasket.Api.Data.Entities.User", b =>
                {
                    b.HasOne("FruitVegBasket.Api.Data.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("FruitVegBasket.Api.Data.Entities.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("FruitVegBasket.Api.Data.Entities.User", b =>
                {
                    b.Navigation("Addresses");
                });
#pragma warning restore 612, 618
        }
    }
}
